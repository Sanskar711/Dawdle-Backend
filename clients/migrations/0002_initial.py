# Generated by Django 4.2.14 on 2024-08-31 11:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '__first__'),
        ('clients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('company_description', models.TextField(help_text='A brief description of the company.', null=True)),
                ('company_website', models.URLField(help_text='The official website of the company.', null=True)),
                ('calendly_link', models.URLField(help_text="Link to the company's Calendly schedule.", null=True)),
                ('company_logo', models.ImageField(blank=True, help_text='Upload the company logo.', null=True, upload_to='company_logos/')),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='IdealCustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry', models.CharField(choices=[('Tech', 'Technology'), ('Health', 'Healthcare')], help_text='Select the industry', max_length=50)),
                ('geography', models.CharField(choices=[('NA', 'North America'), ('EU', 'Europe')], help_text='Select the geographical region', max_length=50)),
                ('company_size', models.CharField(choices=[('Small', '1-50 employees'), ('Medium', '51-200 employees'), ('Large', '201+ employees')], help_text='Select the size of the company', max_length=50)),
                ('department', models.CharField(choices=[('HR', 'Human Resources'), ('IT', 'Information Technology')], help_text='Select the department', max_length=50)),
                ('designations', models.TextField(help_text='Comma-separated designations')),
                ('additional_details', models.TextField(blank=True, help_text='Additional details about the ideal customer profile', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Prospect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_visible', models.BooleanField(default=True)),
                ('geography', models.CharField(default='Undefined', help_text='Geographic location of the prospect', max_length=255)),
                ('status', models.CharField(choices=[('scheduled', 'Meeting Scheduled'), ('completed', 'Meeting Completed'), ('closed', 'Deal Closed'), ('open', 'Open For Meeting')], default='open', help_text='Current status of the prospect', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='QualifyingQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('link', models.URLField(help_text='Link to resources like websites, documents, etc.')),
            ],
        ),
        migrations.CreateModel(
            name='UseCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=1, max_length=255)),
                ('description', models.TextField(help_text='Brief description of the use case', null=True)),
                ('solution', models.TextField(help_text='How the product is solving the problem', null=True)),
                ('target_audience', models.TextField(help_text='Who might be facing the problem?', null=True)),
                ('sample_pitch', models.TextField(help_text='Sample pitch to present the use case', null=True)),
                ('reference_links', models.TextField(help_text='Reference links related to the use case', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QualifyingQuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField()),
                ('qualifying_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.qualifyingquestion')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(help_text='Brief product description', null=True)),
                ('key_features', models.TextField(help_text='Key product features in bullet points', null=True)),
                ('key_problems_solved', models.TextField(help_text='Key problems solved by the product in bullet points', null=True)),
                ('video_link', models.URLField(blank=True, help_text='Link to the product video', null=True)),
                ('assigned_users', models.ManyToManyField(blank=True, related_name='assigned_clients', to='users.user')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='clients.client')),
                ('ideal_customer_profiles', models.ManyToManyField(blank=True, related_name='products', to='clients.idealcustomerprofile')),
                ('product_prospects', models.ManyToManyField(blank=True, related_name='product', to='clients.prospect')),
                ('qualifying_questions', models.ManyToManyField(blank=True, related_name='products', to='clients.qualifyingquestion')),
                ('resources', models.ManyToManyField(blank=True, related_name='products', to='clients.resource')),
                ('use_cases', models.ManyToManyField(blank=True, related_name='products', to='clients.usecase')),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_used', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otps', to='clients.client')),
            ],
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_at', models.DateTimeField()),
                ('poc_first_name', models.CharField(max_length=255, null=True)),
                ('poc_last_name', models.CharField(max_length=255, null=True)),
                ('poc_email', models.EmailField(max_length=254, null=True)),
                ('poc_phone_number', models.CharField(max_length=20, null=True)),
                ('poc_designation', models.CharField(max_length=255, null=True)),
                ('other_relevant_details', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('closed', 'Closed'), ('pending', 'Pending For Approval')], default='scheduled', max_length=20)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='clients.product')),
                ('prospect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.prospect')),
                ('ualifying_question_responses', models.ManyToManyField(related_name='meetings', to='clients.qualifyingquestionresponse')),
                ('use_cases', models.ManyToManyField(related_name='meetings', to='clients.usecase')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
        ),
        migrations.CreateModel(
            name='EmailRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poc_first_name', models.CharField(max_length=255)),
                ('poc_last_name', models.CharField(max_length=255)),
                ('poc_email', models.EmailField(max_length=254)),
                ('poc_designation', models.CharField(max_length=255)),
                ('email_subject', models.CharField(max_length=255)),
                ('email_body', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed')], default='pending', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='clients.product')),
                ('prospect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.prospect')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
        ),
    ]
